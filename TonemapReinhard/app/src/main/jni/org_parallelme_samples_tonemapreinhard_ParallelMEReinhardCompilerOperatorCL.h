/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL */

#ifndef _Included_org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL
#define _Included_org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL
 * Method:    nativeInit
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL_nativeInit
  (JNIEnv *, jobject);

/*
 * Class:     org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL
 * Method:    nativeCleanUp
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL_nativeCleanUp
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL
 * Method:    nativeCreateHDRImage
 * Signature: (J[BII)V
 */
JNIEXPORT void JNICALL Java_org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL_nativeCreateHDRImage
  (JNIEnv *, jobject, jlong, jbyteArray, jint, jint);

/*
 * Class:     org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL
 * Method:    nativeToBitmap
 * Signature: (JLandroid/graphics/Bitmap;)V
 */
JNIEXPORT void JNICALL Java_org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL_nativeToBitmap
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL
 * Method:    nativeGetHeight
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL_nativeGetHeight
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL
 * Method:    nativeGetWidth
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL_nativeGetWidth
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL
 * Method:    nativeIterator1
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL_nativeIterator1
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL
 * Method:    nativeSetSumIterator2
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL_nativeSetSumIterator2
  (JNIEnv *, jobject, jlong, jfloat);

/*
 * Class:     org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL
 * Method:    nativeSetMaxIterator2
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL_nativeSetMaxIterator2
  (JNIEnv *, jobject, jlong, jfloat);

/*
 * Class:     org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL
 * Method:    nativeIterator2
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL_nativeIterator2
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL
 * Method:    nativeGetSumIterator2
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL_nativeGetSumIterator2
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL
 * Method:    nativeGetMaxIterator2
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL_nativeGetMaxIterator2
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL
 * Method:    nativeSetScaleFactorIterator3
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL_nativeSetScaleFactorIterator3
  (JNIEnv *, jobject, jlong, jfloat);

/*
 * Class:     org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL
 * Method:    nativeSetLmax2Iterator3
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL_nativeSetLmax2Iterator3
  (JNIEnv *, jobject, jlong, jfloat);

/*
 * Class:     org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL
 * Method:    nativeIterator3
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL_nativeIterator3
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL
 * Method:    nativeIterator4
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL_nativeIterator4
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL
 * Method:    nativeSetPowerIterator5
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL_nativeSetPowerIterator5
  (JNIEnv *, jobject, jlong, jfloat);

/*
 * Class:     org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL
 * Method:    nativeIterator5
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_parallelme_samples_tonemapreinhard_ParallelMEReinhardCompilerOperatorCL_nativeIterator5
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
